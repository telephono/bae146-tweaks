name: build.yml

on:
  workflow_call:
    inputs:
      output-path:
        required: true
        type: string

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup target add x86_64-unknown-linux-gnu
      - run: |
          mkdir -p ${{ inputs.output-path }}/lin_x64
          cargo build --target x86_64-unknown-linux-gnu --release
          cp target/x86_64-unknown-linux-gnu/release/lib${{ inputs.output-path }}.so ${{ inputs.output-path }}/lin_x64/${{ inputs.output-path }}.xpl
      - uses: actions/upload-artifact@v4
        with:
          name: lin_x64
          path: ${{ inputs.output-path }}

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
      - run: |
          mkdir -p ${{ inputs.output-path }}/mac_x64
          cargo build --target aarch64-apple-darwin --release
          cargo build --target x86_64-apple-darwin --release
          lipo -create -output ${{ inputs.output-path }}/mac_x64/${{ inputs.output-path }}.xpl target/aarch64-apple-darwin/release/lib${{ inputs.output-path }}.dylib target/x86_64-apple-darwin/release/lib${{ inputs.output-path }}.dylib
      - uses: actions/upload-artifact@v4
        with:
          name: mac_x64
          path: ${{ inputs.output-path }}

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup target add x86_64-pc-windows-gnu
      - run: |
          mkdir -p ${{ inputs.output-path }}/win_x64
          cargo build --target x86_64-pc-windows-gnu --release
          cp target/x86_64-pc-windows-gnu/release/${{ inputs.output-path }}.dll ${{ inputs.output-path }}/win_x64/${{ inputs.output-path }}.xpl
      - uses: actions/upload-artifact@v4
        with:
          name: win_x64
          path: ${{ inputs.output-path }}

  build_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          mkdir -p ${{ inputs.output-path }}
          cp LICENSE ${{ inputs.output-path }}/LICENSE.txt
          cp README.md ${{ inputs.output-path }}/README.md
      - uses: actions/upload-artifact@v4
        with:
          name: docs
          path: ${{ inputs.output-path }}
